{"version":3,"sources":["components/HomePage.tsx","components/CityPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","useState","city","setCity","history","useHistory","Container","style","height","backgroundColor","className","fluid","Row","Col","Form","inline","onSubmit","push","FormGroup","Input","type","placeholder","value","onChange","e","target","Button","CityPage","useParams","temp","setTemp","cityName","setCityName","useEffect","a","fetch","cityRaw","json","cityJSON","main","name","loadCity","color","xs","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAYe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACIC,EAAUC,cAMd,OACE,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,QAASC,gBAAiB,WAC3CC,UAAU,+DACVC,OAAO,EAHT,SAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,QAAM,EAACL,UAAU,eAAeM,SAZzB,WACnBZ,EAAQa,KAAK,SAAWf,IAWlB,UACE,cAACgB,EAAA,EAAD,CAAWR,UAAU,iBAArB,SACE,cAACS,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,qBACZC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAAQqB,EAAEC,OAAOH,YAGtC,cAACI,EAAA,EAAD,8B,6BCYGC,MAzCf,WACE,IAAIzB,EAAa0B,cAEjB,EAAwB3B,mBAAwB,MAAhD,mBAAO4B,EAAP,KAAaC,EAAb,KACA,EAAgC7B,mBAASC,EAAK6B,UAA9C,mBAAOA,EAAP,KAAiBC,EAAjB,KAcA,OAZAC,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,qDAAD,OAC4BJ,EAD5B,yDADZ,cACTK,EADS,gBAIQA,EAAQC,OAJhB,OAITC,EAJS,OAKfR,EAAQQ,EAASC,KAAKV,MACtBG,EAAYM,EAASE,MANN,2CAAH,qDAQdC,KACC,IAGD,cAACnC,EAAA,EAAD,CACEC,MAAO,CACLC,OAAQ,QACRC,gBAAkBoB,EAAYA,EAAO,GAAK,UAAY,UAA7B,GACzBa,MAAQb,EAAYA,EAAO,GAAK,UAAY,UAA7B,IAEjBnB,UAAU,mEACVC,OAAO,EAPT,SASE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAK8B,GAAG,KAAR,UACE,oBAAIjC,UAAU,mBAAd,SAAkCqB,IAClC,qBAAIrB,UAAU,cAAd,UAA6BmB,EAA7B,UACA,oBAAInB,UAAU,cAAd,SACImB,EAAYA,EAAO,GAAK,+BAAuB,+BAAxC,aC1BNe,EAXH,WACV,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/C,IACjC,cAAC,IAAD,CAAO8C,KAAK,kBAAkBC,UAAWpB,UCKlCqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81808744.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function HomePage() {\r\n  const [city, setCity] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = () => {\r\n    history.push(\"/city/\" + city);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      style={{ height: \"100vh\", backgroundColor: \"#F2FEDC\" }}\r\n      className=\"d-flex flex-column justify-content-center align-items-center\"\r\n      fluid={true}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <Form inline className=\"d-flex gap-2\" onSubmit={handleSubmit}>\r\n            <FormGroup className=\"d-inline-block\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter city name...\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <Button>Submit</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface City {\r\n  cityName: string;\r\n}\r\n\r\nfunction CityPage() {\r\n  let city: City = useParams();\r\n\r\n  const [temp, setTemp] = useState<null | number>(null);\r\n  const [cityName, setCityName] = useState(city.cityName);\r\n\r\n  useEffect(() => {\r\n    const loadCity = async () => {\r\n      const cityRaw = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=98b7465353d383f3d0f3bc4a284a48ae&units=metric`\r\n      );\r\n      const cityJSON = await cityRaw.json();\r\n      setTemp(cityJSON.main.temp);\r\n      setCityName(cityJSON.name);\r\n    };\r\n    loadCity();\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        height: \"100vh\",\r\n        backgroundColor: !temp ? \"\" : temp < 15 ? \"#5BC1D1\" : \"#F0EF4F\",\r\n        color: !temp ? \"\" : temp < 15 ? \"#002E3C\" : \"#2F3200\",\r\n      }}\r\n      className=\"d-flex flex-column justify-content-center align-items-center p-0\"\r\n      fluid={true}\r\n    >\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          <h1 className=\"text-center mb-5\">{cityName}</h1>\r\n          <h2 className=\"text-center\">{temp}Â°</h2>\r\n          <h3 className=\"text-center\">\r\n            {!temp ? \"\" : temp < 15 ? \"Il fait froid!!!ðŸ¥¶\" : \"Il fait chaud!!!ðŸ¥µ\"}\r\n          </h3>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CityPage;\r\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport CityPage from './components/CityPage';\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/city/:cityName\" component={CityPage} />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}